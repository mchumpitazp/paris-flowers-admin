generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  id                     Int      @id @default(autoincrement())
  customer_name          String
  customer_phone         String
  customer_email         String?
  delivery_address       String
  delivery_district      String
  delivery_datetime      DateTime @db.Timestamptz(6)
  needs_card             Boolean
  card_text              String?
  is_different_recipient Boolean
  recipient_phone        String?
  created_at             DateTime @default(now()) @db.Timestamptz(6)
}

model product_images {
  id            Int       @id @default(autoincrement())
  product_id    Int?
  image_url     String
  is_primary    Boolean?  @default(false)
  display_order Int?      @default(0)
  products      products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id                 Int                  @id @default(autoincrement())
  name               String
  descriptionRu      String?
  price              Int?
  category           String?
  status             Json?
  image              Json?
  occasion           String?
  width              Int?
  height             Int?
  items              Json?
  expiryDate         String?
  createdAt          DateTime?            @db.Timestamptz(6)
  updatedAt          DateTime?            @db.Timestamptz(6)
  is_active          Boolean              @default(true)
  product_categories product_categories[]
  product_images     product_images[]
  product_occasions  product_occasions[]
}

model occasions {
  id                Int                 @id @default(autoincrement())
  slug              String              @unique
  label             String
  product_occasions product_occasions[]
}

model product_occasions {
  product_id  Int
  occasion_id Int
  occasions   occasions @relation(fields: [occasion_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, occasion_id])
}

model categories {
  id                 Int                  @id @default(autoincrement())
  slug               String               @unique
  label              String
  image              String?
  product_categories product_categories[]
}

model product_categories {
  product_id  Int
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, category_id])
}
